# docker-compose.yml - IVO V2 Seguro SEM REDIS
services:
  ivo-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ivo-v2-dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY:-}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
    volumes:
      # ✅ Volumes com user mapping para segurança
      - ./src:/app/src:ro
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - uploads_data:/app/uploads
    user: "1001:1001"  # ✅ Executa com UID/GID específicos
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ivo-network
    # ✅ Limites de recursos para segurança
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # MCP Server seguro
  mcp-server:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ivo-mcp-server
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: ["python", "src/mcp/image_analysis_server.py"]
    volumes:
      - ./src:/app/src:ro
    user: "1001:1001"  # ✅ Mesmo usuário não-root
    depends_on:
      - ivo-app
    restart: unless-stopped
    networks:
      - ivo-network
    # ✅ Limites de recursos
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

volumes:
  uploads_data:
    driver: local
    # ✅ Volume isolado e seguro

networks:
  ivo-network:
    driver: bridge
    # ✅ Rede isolada